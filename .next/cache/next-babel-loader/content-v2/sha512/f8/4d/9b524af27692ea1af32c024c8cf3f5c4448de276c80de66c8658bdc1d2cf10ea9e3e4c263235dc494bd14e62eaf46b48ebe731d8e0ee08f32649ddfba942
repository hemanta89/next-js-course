{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\ract\\\\next-js-news\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetUpDetail\";\n\nfunction MeetupDetail1(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.desciption,\n    desciption: props.meetupData.desciption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetail1;\nexport var __N_SSG = true;\nexport default MeetupDetail1;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail1\");","map":{"version":3,"sources":["D:/ract/next-js-news/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetail1","props","meetupData","image","title","desciption"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,UAH5B;AAIE,IAAA,UAAU,EAAEJ,KAAK,CAACC,UAAN,CAAiBG;AAJ/B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQL,a;;AA+DT,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetUpDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nfunction MeetupDetail1(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.desciption}\r\n      desciption={props.meetupData.desciption}\r\n    />\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hemanta:L7CLFMvY3E2s2xBI@cluster0.xuaef.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetup\");\r\n  const meetups= await meetupCollection.find({},{_id:1}).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths:meetups.map(mm=>({\r\n      params:{\r\n        meetupId: mm._id.toString(),\r\n      }\r\n    }))\r\n    //  [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm1',\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm2',\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  //fetch data from backed end\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hemanta:L7CLFMvY3E2s2xBI@cluster0.xuaef.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetup\");\r\n  const meetupsselected= await meetupCollection.findOne({_id:ObjectId(meetupId)});\r\n  client.close();\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupsselected._id.toString(),\r\n        title:meetupsselected.title,\r\n        address:meetupsselected.address,\r\n        desciption:meetupsselected.description\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetail1;\r\n"]},"metadata":{},"sourceType":"module"}