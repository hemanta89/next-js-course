{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\ract\\\\next-js-news\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetail1(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.desciption,\n    desciption: props.desciption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://hemanta:L7CLFMvY3E2s2xBI@cluster0.xuaef.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetup\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(mm => ({\n      params: {\n        meetupId: mm._id.toString()\n      }\n    })) //  [\n    //   {\n    //     params: {\n    //       meetupId: 'm1',\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: 'm2',\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; //fetch data from backed end\n\n  const client = await MongoClient.connect(\"mongodb+srv://hemanta:L7CLFMvY3E2s2xBI@cluster0.xuaef.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetup\");\n  const meetupsselected = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: meetupsselected\n    }\n  };\n}\nexport default MeetupDetail1;","map":{"version":3,"sources":["D:/ract/next-js-news/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","MeetupDetail1","props","image","title","desciption","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","mm","params","meetupId","toString","getStaticProps","context","meetupsselected","findOne","meetupData"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,UAHjB;AAIE,IAAA,UAAU,EAAEH,KAAK,CAACG;AAJpB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AACA,QAAMC,OAAO,GAAE,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAAyB;AAACC,IAAAA,GAAG,EAAC;AAAL,GAAzB,EAAkCC,OAAlC,EAArB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,EAAE,KAAG;AACrBC,MAAAA,MAAM,EAAC;AACLC,QAAAA,QAAQ,EAAEF,EAAE,CAACN,GAAH,CAAOS,QAAP;AADL;AADc,KAAH,CAAd,CAFD,CAOL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBK,GAAP;AAoBD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD4C,CAE5C;;AAEA,QAAMf,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AACA,QAAMe,eAAe,GAAE,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAACb,IAAAA,GAAG,EAACQ;AAAL,GAAzB,CAA7B;AACAf,EAAAA,MAAM,CAACS,KAAP;AAGA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACL0B,MAAAA,UAAU,EAAEF;AADP;AADF,GAAP;AAKD;AACD,eAAezB,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetUpDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\nfunction MeetupDetail1(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.image}\r\n      title={props.title}\r\n      address={props.desciption}\r\n      desciption={props.desciption}\r\n    />\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hemanta:L7CLFMvY3E2s2xBI@cluster0.xuaef.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetup\");\r\n  const meetups= await meetupCollection.find({},{_id:1}).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths:meetups.map(mm=>({\r\n      params:{\r\n        meetupId: mm._id.toString(),\r\n      }\r\n    }))\r\n    //  [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm1',\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm2',\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  //fetch data from backed end\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hemanta:L7CLFMvY3E2s2xBI@cluster0.xuaef.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetup\");\r\n  const meetupsselected= await meetupCollection.findOne({_id:meetupId});\r\n  client.close();\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetupData: meetupsselected,\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetail1;\r\n"]},"metadata":{},"sourceType":"module"}